plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.thus.currency'
    compileSdk build_versions.compile_sdk

    defaultConfig {
        applicationId "com.thus.currency"
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    flavorDimensions 'env'

    productFlavors {
        dev {
            dimension 'env'
            resValue("string", "app_name", "Currency (Dev)")
            buildConfigField("String", "OPEN_EXCHANGE_RATES_SERVICE_APP_ID", "${OPEN_EXCHANGE_RATES_SERVICE_APP_ID_DEV}")
        }

        prod {
            dimension 'env'
            resValue("string", "app_name", "Currency")
            if (project.hasProperty("OPEN_EXCHANGE_RATES_SERVICE_APP_ID_PROD")) {
                buildConfigField("String", "OPEN_EXCHANGE_RATES_SERVICE_APP_ID", "${OPEN_EXCHANGE_RATES_SERVICE_APP_ID_PROD}")
            } else {
                buildConfigField("String", "OPEN_EXCHANGE_RATES_SERVICE_APP_ID", "${OPEN_EXCHANGE_RATES_SERVICE_APP_ID_DEV}")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin.stdlib
    implementation deps.app_compat
    implementation deps.core_ktx

    // Android Testing Support Library's runner and rules
    androidTestImplementation deps.atsl.core
    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.room.testing
    androidTestImplementation deps.arch_core.testing
    androidTestImplementation deps.junit
    androidTestImplementation deps.retrofit.mock
    androidTestImplementation deps.mockito.core
    androidTestImplementation deps.mockito.android

    testImplementation deps.junit
    testImplementation deps.retrofit.mock
    testImplementation deps.arch_core.testing
    testImplementation deps.mockito.core
    testImplementation deps.mockk
    testImplementation deps.kotlin.kotlinReflect
    testImplementation deps.kotlin.kotlinCoroutinesTest

    // Espresso UI Testing
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib
    androidTestImplementation deps.espresso.intents

    // Navigation
    implementation deps.navigation.runtime_ktx
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.ui_ktx

    implementation deps.constraint_layout

    // lifecycle
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.runtime_ktx
    implementation deps.lifecycle.viewmodel_ktx
    implementation deps.lifecycle.livedata_ktx

    // Dagger
    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    implementation deps.dagger.hilt_android
    kapt deps.dagger.compiler
    kapt deps.dagger.dagger_android_processor
    kapt deps.dagger.hilt_compiler

    implementation deps.recyclerview
    implementation deps.swiperefreshlayout

    implementation deps.paging_ktx

    implementation deps.okhttp_logging_interceptor
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson

    // Architecture components
    implementation deps.lifecycle.runtime
    kapt deps.lifecycle.compiler
    implementation deps.room.runtime
    implementation deps.room.ktx
    implementation deps.room.paging
    kapt deps.room.compiler

    implementation deps.gson
    implementation deps.picasso

    implementation project(path: ':core:base')
    implementation project(path: ':core:designsystem')
}

kapt {
    correctErrorTypes true
}